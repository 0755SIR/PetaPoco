
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `mysql`
//     Provider:               `MySql.Data.MySqlClient`
//     Connection String:      `server=jab;database=jab;user id=jab;password=**zapped**;Allow User Variables=true`
//     Schema:                 ``
//     Include Views:          `False`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace mysql
{
	public partial class mysqlDB : Database
	{
		public mysqlDB() 
			: base("mysql")
		{
			CommonConstruct();
		}

		public mysqlDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			mysqlDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static mysqlDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new mysqlDB();
        }

		[ThreadStatic] static mysqlDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static mysqlDB repo { get { return mysqlDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public void Save() { repo.Save(this); }
			public object Insert() { return repo.Insert(this); }
			public int Update() { return repo.Update(this); }
			public int Delete() { return repo.Delete(this); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
		}
	}
	

    
	[TableName("article_categories")]
	[PrimaryKey("article_category_id")]
	[ExplicitColumns]
    public partial class article_category : mysqlDB.Record<article_category>  
    {
        [Column] public long article_category_id { get; set; }
        [Column] public long article_id { get; set; }
        [Column] public long category_id { get; set; }
	}

    
	[TableName("articles")]
	[PrimaryKey("article_id")]
	[ExplicitColumns]
    public partial class article : mysqlDB.Record<article>  
    {
        [Column] public long article_id { get; set; }
        [Column] public long site_id { get; set; }
        [Column] public long user_id { get; set; }
        [Column] public DateTime? date_created { get; set; }
        [Column] public string title { get; set; }
        [Column] public string content { get; set; }
        [Column] public bool draft { get; set; }
        [Column] public long? wip_article_id { get; set; }
        [Column] public long local_article_id { get; set; }
	}

    
	[TableName("categories")]
	[PrimaryKey("category_id")]
	[ExplicitColumns]
    public partial class category : mysqlDB.Record<category>  
    {
        [Column] public long category_id { get; set; }
        [Column] public long site_id { get; set; }
        [Column] public string name { get; set; }
        [Column] public string slug { get; set; }
        [Column] public string description { get; set; }
	}

    
	[TableName("comments")]
	[PrimaryKey("comment_id")]
	[ExplicitColumns]
    public partial class comment : mysqlDB.Record<comment>  
    {
        [Column] public long comment_id { get; set; }
        [Column] public long site_id { get; set; }
        [Column] public long article_id { get; set; }
        [Column] public string name { get; set; }
        [Column] public string email { get; set; }
        [Column] public string website { get; set; }
        [Column] public DateTime date_posted { get; set; }
        [Column] public string content { get; set; }
        [Column] public bool pending { get; set; }
        [Column] public string session_id { get; set; }
	}

    
	[TableName("files")]
	[PrimaryKey("file_id")]
	[ExplicitColumns]
    public partial class file : mysqlDB.Record<file>  
    {
        [Column] public long file_id { get; set; }
        [Column] public long site_id { get; set; }
        [Column] public byte[] data { get; set; }
        [Column] public string folder { get; set; }
        [Column] public string filename { get; set; }
        [Column] public DateTime date_created { get; set; }
        [Column] public DateTime date_modified { get; set; }
        [Column] public string etag { get; set; }
	}

    
	[TableName("issue25")]
	[PrimaryKey("id")]
	[ExplicitColumns]
    public partial class issue25 : mysqlDB.Record<issue25>  
    {
        [Column] public long id { get; set; }
        [Column] public uint? val { get; set; }
        [Column("issue25")] public int? _issue25 { get; set; }
	}

    
	[TableName("lhs")]
	[PrimaryKey("lhs_id")]
	[ExplicitColumns]
    public partial class lh : mysqlDB.Record<lh>  
    {
        [Column] public long lhs_id { get; set; }
        [Column] public string name { get; set; }
        [Column] public long rhs_id { get; set; }
	}

    
	[TableName("redirects")]
	[PrimaryKey("redirect_id")]
	[ExplicitColumns]
    public partial class redirect : mysqlDB.Record<redirect>  
    {
        [Column] public long redirect_id { get; set; }
        [Column] public long site_id { get; set; }
        [Column] public int priority { get; set; }
        [Column] public string expr { get; set; }
        [Column] public string newpath { get; set; }
        [Column] public bool rewrite { get; set; }
        [Column] public bool disabled { get; set; }
        [Column] public string description { get; set; }
	}

    
	[TableName("rhs")]
	[PrimaryKey("rhs_id")]
	[ExplicitColumns]
    public partial class rh : mysqlDB.Record<rh>  
    {
        [Column] public long rhs_id { get; set; }
        [Column] public string name { get; set; }
	}

    
	[TableName("sessions")]
	[PrimaryKey("session_id")]
	[ExplicitColumns]
    public partial class session : mysqlDB.Record<session>  
    {
        [Column] public long session_id { get; set; }
        [Column] public string asp_application_name { get; set; }
        [Column] public string asp_session_id { get; set; }
        [Column] public DateTime date_created { get; set; }
        [Column] public DateTime date_expires { get; set; }
        [Column] public DateTime date_locked { get; set; }
        [Column] public int lock_id { get; set; }
        [Column] public int timeout { get; set; }
        [Column] public bool locked { get; set; }
        [Column] public byte[] session_data { get; set; }
        [Column] public int flags { get; set; }
	}

    
	[TableName("site_users")]
	[PrimaryKey("site_user_id")]
	[ExplicitColumns]
    public partial class site_user : mysqlDB.Record<site_user>  
    {
        [Column] public long site_user_id { get; set; }
        [Column] public long site_id { get; set; }
        [Column] public long user_id { get; set; }
        [Column] public bool admin { get; set; }
	}

    
	[TableName("sites")]
	[PrimaryKey("site_id")]
	[ExplicitColumns]
    public partial class site : mysqlDB.Record<site>  
    {
        [Column] public long site_id { get; set; }
        [Column] public DateTime date_created { get; set; }
        [Column] public string short_name { get; set; }
        [Column] public string display_name { get; set; }
        [Column] public string custom_domain { get; set; }
        [Column] public string custom_rss_feed { get; set; }
        [Column] public string rss_copyright_notice { get; set; }
        [Column] public string rss_description { get; set; }
        [Column] public string rss_managing_editor { get; set; }
        [Column] public int comment_mode { get; set; }
        [Column] public int image_render_size { get; set; }
        [Column] public int image_upload_size { get; set; }
        [Column] public long next_article_id { get; set; }
        [Column] public int articles_per_page { get; set; }
	}

    
	[TableName("users")]
	[PrimaryKey("user_id")]
	[ExplicitColumns]
    public partial class user : mysqlDB.Record<user>  
    {
        [Column] public long user_id { get; set; }
        [Column] public DateTime date_created { get; set; }
        [Column] public DateTime date_lastlogin { get; set; }
        [Column] public bool active { get; set; }
        [Column] public bool admin { get; set; }
        [Column] public string email { get; set; }
        [Column] public string password { get; set; }
        [Column] public string display_name { get; set; }
        [Column] public string activation_code { get; set; }
	}

    
	[TableName("wip_articles")]
	[PrimaryKey("wip_article_id")]
	[ExplicitColumns]
    public partial class wip_article : mysqlDB.Record<wip_article>  
    {
        [Column] public long wip_article_id { get; set; }
        [Column] public long article_id { get; set; }
        [Column] public long site_id { get; set; }
        [Column] public long user_id { get; set; }
        [Column] public DateTime? date_saved { get; set; }
        [Column] public string title { get; set; }
        [Column] public string date_created_string { get; set; }
        [Column] public string content { get; set; }
        [Column] public string categories { get; set; }
	}

}


